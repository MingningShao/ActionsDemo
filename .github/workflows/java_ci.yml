# This is a basic workflow to help you get started with Actions

name: Java CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: setup jdk 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # Runs a set of commands using the runners shell
      - name: Build with Maven
        run: mvn -B clean package --file pom.xml
      - name: maven verify
        run: mvn -B clean verify -Pintegration-test
        
  lint-docs:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v1
      - name: Run helm docs
        run: sudo .github/helm-docs.sh
        
  artifact:
   name: publish github packages
   runs-on: ubuntu-latest
  
   steps:
    - uses: actions/checkout@v1
    - name: setup jdk 8
      uses: actions/setup-java@v1
      with:
       java-version: 1.8
    - name: publish artifacts on github packages
      run: mvn -B clean deploy -DskipTests
      env:
       GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  upload:
    name: upload artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: mvn clean -B package --file pom.xml -DskipTests
      - run: mkdir staging && cp target/*.jar staging
      - uses: actions/upload-artifact@v1
        with:
          name: Package
          path: staging
        
  docker:
   name: publish image to docker hub
   runs-on: ubuntu-latest
   env:
    REPO: ${{secrets.DOCKER_REPO}}
   
   steps:
    - uses: actions/checkout@v1
    - name: Login to Docker Hub
      run: docker login -u ${{secrets.DOCKER_USER}} -p ${{secrets.DOCKER_PASS}}
    - name: build docker image
      run: docker build -t $REPO:latest -t $REPO:${GITHUB_SHA::8} .
    - name: publish docker image
      run: docker push $REPO 
